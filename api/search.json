[{"title":"使用 Docker 快速部署 Blessing Skin Server","url":"/posts/3/","content":"\n![cover](https://media.githubusercontent.com/media/bs-community/logo/main/logo.png)\n\n# 前言\n\n> Blessing Skin 是一款能让您上传、管理和分享您的 Minecraft 皮肤和披风的 Web 应用程序。与修改游戏材质包不同的是，所有人都能在游戏中看到各自的皮肤和披风（当然，前提是玩家们要使用同一个皮肤站）。\n>\n> Blessing Skin 是一个开源的 PHP 项目，这意味着您可以自由地在您的服务器上部署它。\n\n本篇教程展示如何使用`docker`快速搭建并上线一个BSS皮肤站\n\n# 正文\n\n## 部署容器\n\n本教程使用的镜像为非官方镜像`feilongproject/blessing-skin-server:6.0.2-1.0.0`\n\n首先让我们在宿主机拉取镜像并创建运行容器实例\n\n```bash\ndocker run -d --name <容器名> \\\n  -v ./bss_data:/var/www/blessing-skin \\\n  feilongproject/blessing-skin-server:6.0.2-1.0.0\n```\n\n这里我填的容器名为`alsoskin`，挂载到了`./bss_data`，你填你喜欢的就好。\n\n如果不进行`-v`挂载，删除容器时你未挂载的数据将会丢失，建议挂载。你也可以像这样分开挂载\n\n```bash\n-v ./bss_env/.env:/var/www/blessing-skin/.env \\\n-v ./bss_storage:/var/www/blessing-skin/storage \\\n-v ./bss_uploads:/var/www/blessing-skin/public/uploads\n```\n\n将你的容器连接到你能连接的网络里，就可以通过内网地址先进行访问了。\n\n在这里，我的PC和容器都连接到了我提前自定义的`lan`网络，处于同一网段`192.168.50.x`\n\n|   Name   | IPv4 Address |\n| :------: | :----------: |\n| alsoskin | 192.168.50.5 |\n|  My PC   | 192.168.50.x |\n\n> [!NOTE]\n>\n> 如果你没有手动创建 `lan` 网络，可以用默认的 `bridge` 网络，或者用 `docker network create lan` 来新建一个。这个网络我是用来连接我部署了`frp`的容器的。\n>\n\n打开浏览器，在导航栏输入`192.168.50.5`即可访问皮肤站看到欢迎页面\n\n![welcome](https://i.loli.net/2020/07/07/WGu1oVlTF6AJOw9.png)\n\n~~懒得截图，直接复用官方用户手册的图了，~~由于镜像的版本是`6.0.2`，你们看到的不长这样但差不太多。\n\n接下来按页面提示的做就好。\n\n在选择数据库处，我选择的是`PostgreSQL`，因此我使用其镜像\n\n```bash\ndocker run -d \\\n  --name <数据库容器名> \\\n  --network <加入的网络> \\\n  -e POSTGRES_USER=<用户名> \\\n  -e POSTGRES_PASSWORD=<你的密码> \\\n  -e POSTGRES_DB=<数据库名> \\\n  -v ./pgdata:/var/lib/postgresql/data \\\n  postgres:15\n```\n\n这里我数据库容器名写的是`blessing-postgres`, 加入的网络是`lan`, 用户名和数据库名我写的是`alsoskin`，也就是\n\n```bash\ndocker run -d \\\n  --name blessing-postgres \\\n  --network lan \\\n  -e POSTGRES_USER=alsoskin \\\n  -e POSTGRES_PASSWORD=xxx \\\n  -e POSTGRES_DB=alsoskin \\\n  -v ./pgdata:/var/lib/postgresql/data \\\n  postgres:15\n```\n\n> [!NOTE]\n>\n> 如果你~~和我一样~~不熟悉`PostgreSQL`，建议用户名和数据库名写成一样的，或者干脆使用别的数据库。注意密码不要包含`#`、空格、`$`等特殊字符，可以先用简单密码，等后面再改\n>\n\n附上刷新配置缓存的命令，你可能会用到的\n\n```bash\nphp artisan config:clear\nphp artisan cache:clear\n```\n\n## 常见配置调整\n\n### 插件市场链接修改\n\n原镜像的插件市场链接可能无法访问，需要修改为目前[官方](https://github.com/bs-community/blessing-skin-server)的`33055ec`分支的`/config/plugins.php`里的[链接](https://github.com/bs-community/blessing-skin-server/blob/33055ecbf97bdef8c5798f48bbfe97535f182b28/config/plugins.php#L36)：\n\n```php\n    'registry' => env(\n        'PLUGINS_REGISTRY',\n        'https://bs-plugins.littleservice.cn/registry_{lang}.json'\n    ),\n```\n\n修改后记得刷新配置缓存\n```bash\nphp artisan config:clear\nphp artisan cache:clear\n```\n\n### 设置JWT_SECRET\n\n参见这句[提醒](https://github.com/bs-community/blessing-skin-server/blob/dev/config/jwt.php#L18)\n\n```php\n/*\n|--------------------------------------------------------------------------\n| JWT Authentication Secret\n|--------------------------------------------------------------------------\n|\n| Don't forget to set this in your .env file, as it will be used to sign\n| your tokens. A helper command is provided for this:\n| `php artisan jwt:secret`\n|\n| Note: This will be used for Symmetric algorithms only (HMAC),\n| since RSA and ECDSA use a private/public key combo (See below).\n|\n*/\n\n'secret' => env('JWT_SECRET'),\n```\n\n默认不添加该字段的话，会导致该值为空，启动器无法登录账号\n\n我们现在修改`.env`，添加`JWT_SECRET`字段。\n\n这是一串随机字符，我们可以通过Laravel自带的命令生成并写入 `.env`\n\n```bash\nphp artisan jwt:secret\n```\n\n也可以手动\n\n```bash\nopenssl rand -hex 32\n```\n\n来随机生成一段32字节的，然后放到`.env`\n\n修改`.env`的方法有很多，例如，我们可以通过`cp`将容器中的`.env`拷贝出来到宿主机修改后再拷贝回去\n\n```bash\nsudo docker cp <皮肤站容器名>:/var/www/blessing-skin/.env ./bssenv\nnano bssenv\n# 在末尾换行，添加JWT_SECRET=<你的随机字符>\n# Ctrl+O进行保存，按下enter确认\n# Ctrl+X关闭\nsudo docker cp ./bssenv <皮肤站容器名>:/var/www/blessing-skin/.env\n```\n\n然后连接进入容器中输入以下命令刷新配置缓存或重启容器\n\n```bash\nphp artisan config:clear\nphp artisan cache:clear\n```\n\n## 外网访问与https配置\n\n要实现外网可以使用`https`访问我们的皮肤站，我们需要`ssl`证书。至于如何让外网能够访问，有很多方法。这里由于我的皮肤站部署在我的本地物理机，使用的是通过`frp`，将流量转发到`vps`的方法物理机-`vps`这一段我使用的是`frp`自带的加密，这里讨论的是外网-`vps`的这段。\n\n我选择`nginx`反向代理+`Let's Encrypt`签发证书\n\n这个的教程很多，我这里就不再赘述。\n\n> [!NOTE]\n>\n> 如果你打算使用非默认端口`443`进行`https`访问的话：\n>\n> - 记得将`nginx`的配置文件里`ssl`监听端口的那个`443`改为你打算使用的端口\n> - `proxy_set_header Host $host;`这里，将`$host`改为`$http_host`，否则不会将端口传下去，从而导致在试图`https`访问皮肤站时，出现“发送了无效的响应 `ERR_SSL_PROTOCOL_ERROR`”\n\n# 完成\n\n至此，一个基本可用的 Blessing Skin Server 就搭建完成了。\n\n后续可以在管理面板里安装插件、美化主题，或者接入外部认证系统。\n\n## 相关链接\n\n [Blessing Skin 手册 | Blessing Skin 用户手册](https://blessing.netlify.app/)\n\n[Yggdrasil API | Blessing Skin 用户手册](https://blessing.netlify.app/yggdrasil-api/)\n\n[feilongproject/blessing-skin-server - Docker Image | Docker Hub](https://hub.docker.com/r/feilongproject/blessing-skin-server)\n","categories":["Minecraft"],"tags":["Minecraft","Guide","BSS","Docker"]},{"title":"Minecraft 纯萌新入坑指南","url":"/posts/2/","content":"\n![cover](https://www.minecraft.net/content/dam/minecraftnet/games/minecraft/key-art/Homepage_Discover-our-games_MC-Vanilla-KeyArt_864x864.jpg)\n\n# 前言\n\n本篇指南主要针对纯萌新。下面我们将一步步展示如何通过 PCL2 启动器游玩 Minecraft Java 版\n（国际电脑版）\n\n# 正文\n\n## Java 安装\n\n**如果你使用PCL启动器，或选择了自动下载java，你可以跳过此章节。**\n\n<strong>Java 下载：</strong>请先查看MC服务器游戏版本，并下载安装对应版本的Java：\n\n<p align=\"center\"><b>推荐使用版本请看相关公告</b></p>\n\n（以下超链接是官方下载方式）**游戏版本：1.16.5及以下，请安装Java8**\n网址：https://www.oracle.com/cn/java/technologies/downloads/#java8\n![java8](https://img.z4a.net/images/2025/08/13/java8.png)\n\n**游戏版本：1.17至1.20.4，请安装Java17**\n\n网址：https://www.oracle.com/cn/java/technologies/downloads/#java17\n\n选择方式同上\n\n**游戏版本：1.20.5，1.21 以上，请安装 Java21**\n\n网址：https://www.oracle.com/cn/java/technologies/downloads/#java21\n\n选择方式同上\n\n## 启动器下载\n\n推荐使用[**PCL2启动器**](https://afdian.com/p/0164034c016c11ebafcb52540025c377)，下载完成后，请在桌面或某处新建一个文件夹（建议命名为`mc`），将下载的文件移动到你刚刚在桌面或某处新建的文件夹内。\n\n现在请打开`Plain Craft Launcher 2.exe`程序，这是游戏的启动器，用来进行游戏的外部配置并打开游戏。每次游玩 Minecraft 时，都需要靠 PCL2 启动 Minecraft。\n\n打开启动器后可以在`设置`-`启动`-`游戏Java`中查看本地安装的所有Java版本，建议选`自动选择合适的Java`\n\n建议点击`设置`，再选择`默认版本隔离`，选择`隔离所有版本`（推荐）或`隔离可按装Mod的版本与非正式版`。\n\n![游戏Java](https://img.z4a.net/images/2025/08/13/Java.png)\n\n## 安装游戏\n\n### 玩整合包\n\n选择点击`下载`-`整合包`，搜索你喜欢的整合包点击即可下载游玩。\n\n### 玩自定义mod的游戏版本\n\n账号设置完之后，我们开始安装游戏本体。\n请先点击上方的`下载`，再选择`游戏下载`\n\n![游戏下载](https://img.z4a.net/images/2025/08/13/74b1b78e06c352f0efc46e1ce548dd7a.png)\n\n选择你要玩的游戏版本，这里以`1.20.1`为例\n\n![游戏二级下载](https://img.z4a.net/images/2025/08/13/d799c531ad923d82f42131556ebc0e0e.png)\n\n若要玩原版，直接点击`开始下载`即可，若要玩mod版，选择点击要玩的mod版，这里以Forge版为例，点击`Forge`\n\n![forge](https://img.z4a.net/images/2025/08/13/forge.png)\n\n选择点击你要玩的forge版本(`稳定版`一般是最末尾号为`0`的版本，例如`forge 47.4.0`；`最新版`即最新版本。考虑到mod作者可能没有及时更新导致游玩不稳定性上升，一般来说都是选择`稳定版`，特殊的可能选择某个特定版本，看具体需求)\n\n点击`开始下载`即可下载游戏版本\n\nPCL2一般会自动选择你**最新下载**的或**最近游玩**的游戏版本，若要切换选择游戏版本，选择`启动`-`版本选择`，然后选择你想要的版本即可，接下来，就在`下载`-`Mod`找你喜欢的mod开始游玩吧~(注意**游戏版本**、**兼容性**、及**文件位置**)\n\n## 开始游戏\n\n### 单人游戏\n\n1. 点击`单人游戏`\n\n2. 选择游戏模式（创造/生存/极限）\n\n3. 点击`创建新的世界`\n\n### 多人游戏\n\n#### 加入服务器/别人的游戏\n\n1. 点击`多人游戏`\n2. 点击`添加服务器`\n3. 将别人给你的链接`Ctrl`+`C`, `Ctrl`+`V`到`服务器地址`中，点击`完成`\n4. （后续打开只需）在服务器列表，双击已添加的服务器，进入服务器\n\n#### 别人加入自己的游戏/自开服\n\n会这个的已经不是纯萌新了，所以只提一下可能的一些方案\n\n1. 本地开放局域网服务器通过FRP转发服务器流量\n2. 直接部署在VPS\n3. 有公网ip，直接通过`公网ip:端口`连接（用手机流量开热点给电脑连接可以让电脑获得一个临时的动态公网ipv6）\n\n# 附录\n\n[游戏的基本操作](https://zh.minecraft.wiki/w/Tutorial:%E6%96%B0%E6%89%8B%E6%89%8B%E5%86%8C)\n\n## 常用网站\n\n- [Minecraft Wiki](https://zh.minecraft.wiki/): 查找原版(冷)知识最可靠的百科\n- [MC百科](https://www.mcmod.cn/): 中文模组百科，学习了解各种模组的知识\n- [Curseforge](https://www.curseforge.com/minecraft): 全球 mc 模组作者、整合包作者发布作品的前线\n- [Modrinth](https://modrinth.com/): 新兴的mc模组、材质、插件下载站\n\n","categories":["Minecraft"],"tags":["Minecraft","Noob","Guide"]},{"title":"本站的搭建","url":"/posts/1/","content":"这是本站的第一篇blog\n本站使用hexo框架，参考了pdpeng的相关教程 (https://pdpeng.github.io/2022/01/19/setup-personal-blog/)\n\n感谢jinyaoMa (https://github.com/jinyaoMa/) 提供的mustom模板供我参考网站设计\n","categories":[],"tags":[]}]